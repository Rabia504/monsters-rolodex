{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","width","height","alt","name","email","CardList","monsters","map","index","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAEjB,OAAO,sBAAKC,UAAU,iBAAf,UACP,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,MAAM,MAAMC,OAAO,MAAMC,IAAI,YAE5F,6BAAKP,EAAMG,QAAQK,OACnB,6BAAKR,EAAMG,QAAQM,YCJVC,EAAW,SAACV,GAAD,OAEnB,qBAAKC,UAAU,YAAf,SACKD,EAAMW,SAASC,KAAI,SAACT,EAAQU,GAAT,OAEpB,cAAC,EAAD,CAAuBV,QAASA,GAArBA,EAAQC,UCPfU,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOf,UAAU,SAASgB,KAAK,SAASF,YAAaA,EACpDG,SAAUF,MCiCAG,E,kDAhCX,aAAc,IAAD,8BACT,gBAWJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXlC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAC7DA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAMjE,WACE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYc,wBAElD,OACI,sBAAKnC,UAAU,MAAf,UACA,kDACI,cAAC,EAAD,CAAWc,YAAY,iBACvBC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUL,SAAUqB,W,GA1BdK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ca08d8d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>{\r\n\r\n    return <div className=\"card-container\">\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2`} width=\"180\" height=\"180\" alt=\"monster\"/>\r\n    \r\n    <h2>{props.monster.name}</h2>\r\n    <h4>{props.monster.email}</h4>\r\n     </div>\r\n}\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\nexport const CardList = (props) =>(\r\n\r\n     <div className='card-list'>\r\n        { props.monsters.map((monster,index) =>(\r\n\r\n         <Card key={monster.id} monster={monster}></Card>\r\n        ))}\r\n    \r\n    </div>\r\n  );\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder}\r\n     onChange={handleChange} />\r\n\r\n);","import './App.css';\nimport {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users').then(response =>\n            response.json()).then(users => this.setState({monsters:users}));\n    }\n\n    handleChange = (e) =>{\n      this.setState({searchField:e.target.value});\n    }\n  render () {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n    return (\n        <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n            <SearchBox placeholder=\"search monster\"\n            handleChange={this.handleChange} />\n            <CardList monsters={filteredMonsters} />\n        </div>\n     );\n  \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}